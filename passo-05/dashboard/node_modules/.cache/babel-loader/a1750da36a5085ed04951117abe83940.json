{"remainingRequest":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\src\\views\\Home.vue","mtime":1605701326796},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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KA;AAAA,QAAA,CAAA,EAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,CAPA;AAcA,MAAA,YAAA,EAAA;AACA,QAAA,UAAA,EAAA,IADA;AAEA,QAAA,mBAAA,EAAA;AAFA;AAdA,KAAA;AAmBA,GAzBA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KADA,GACA,QAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CADA;AAEA,gBAAA,KAAA,CAAA,SAAA,CAAA,SAAA;AACA,gBAAA,KAAA,CAAA,IAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,KALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAA,OA/GA,qBA+GA;AACA,WAAA,IAAA;AACA,WAAA,MAAA;AACA;AAlHA;AA3BA,CAAA","sourcesContent":["<template>\n  <div class=\"home\">\n    <h4>Teste anychart</h4>\n    <div id=\"grafico\"></div>\n    {{ mensagens }}\n    <!-- {{ mensagens }} -->\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n//import axios from 'axios';\n//import moment from 'moment';\nimport anychart from \"anychart\";\n//import mysql from \"mysql2/promise\";\n//import graficolinha from '../components/graficolinha';\n//const mysql = require(\"mysql2/promise\");\n//const mysql = require(\"mysql2\");\n\nconst mysql = require('mysql');\n      //var http = require('http');\n      var resultado1 = null;\n      var resultado2 = [];\n      // create the connection to database\n      const connection = mysql.createConnection({\n        host: 'localhost',\n        user: 'smarkio',\n        password:'12345',\n        database: 'smarkiodb'\n      });\n\n      connection.query(\n        'select count(idusuario) from usuarios\twhere month(data) = 7 and year(data) = 2020',\n        function(err, results) {\n          console.log(typeof results[0]['count(idusuario)']);\n          resultado1 = results[0]['count(idusuario)']\n          console.log(resultado1);\n        }\n      );\n      connection.query(\n        'select usuarios.nome as \"Nome\", count(mensagens.idusuario) from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario',\n        function(err, results) {\n          results.forEach(i=>{\n            resultado2.push(i);\n            console.log(i);\n          }\n            \n          )\n        }\n      )\n\n      connection.query(\n        'select avg(resultado.msg) from (select usuarios.nome as \"Nome\", count(mensagens.idusuario) as msg from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario) as resultado',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        \"select intencoes.nome as intencao, count(mensagens.idusuario) as msg from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idintencao\",\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select resultado.intencao, count(resultado.msg) as \"msg\", resultado.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as resultado where resultado.intencao = \"Aplicar\" group by resultado.intencao,resultado.status',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select B.intencao, sum(B.msg) as total, sum(case when B.status = \"Aprovada\" then B.msg end) as \"aprovacao\", sum(case when B.status = \"Aprovada\" then B.msg end)/sum(B.msg) as \"percentual\" from (select A.intencao, count(A.msg) as \"msg\", A.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as A group by A.intencao,A.status) as B group by B.intencao order by percentual desc',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select A.status, A.msg, A.msg/(select count(*) from mensagens)*100 as percentual from(select status.status, count(mensagens.idstatus) as \"msg\", (select count(*) from mensagens) as total from mensagens join status on mensagens.idstatus = status.idstatus group by mensagens.idstatus) as A',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select A.nome, A.Mensagens, A.Mensagens/(select count(*) from mensagens)*100 as percentual from(select intencoes.nome,count(mensagens.idintencao) as \"Mensagens\" from mensagens join intencoes on mensagens.idintencao = intencoes.idintencao group by mensagens.idintencao) as A',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select count(usuarios.idusuario) from mensagens right join usuarios on mensagens.idusuario = usuarios.idusuario where mensagens.idmensagem is null',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n\nexport default {\n  name: \"Home\",\n  components: {\n    //graficolinha\n  },\n  data() {\n    return {\n      usuarios: [],\n      intencoes: [],\n      status: [],\n      mensagens: [],\n      rows1: [],\n      fields1: [],\n      dados: [\n        { x: \"A\", value: 637166 },\n        { x: \"B\", value: 721630 },\n        { x: \"C\", value: 148662 },\n        { x: \"D\", value: 78662 },\n        { x: \"E\", value: 90000 },\n      ],\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    };\n  },\n\n  methods: {\n    async charts() {\n      var chart = anychart.pie(this.dados);\n      chart.container(\"grafico\");\n      chart.draw();\n    },\n\n  //   async main() {\n  //     const mysql = require('mysql2');\n  //     //var http = require('http');\n  //     var resultado1 = null;\n  //     //var resultado2 = [];\n  //     // create the connection to database\n  //     const connection = mysql.createConnection({\n  //       host: 'localhost',\n  //       user: 'smarkio',\n  //       password:'12345',\n  //       database: 'smarkiodb'\n  //     });\n\n  //     connection.query(\n  //       'select count(idusuario) from usuarios\twhere month(data) = 7 and year(data) = 2020',\n  //       function(err, results) {\n  //         console.log(typeof results[0]['count(idusuario)']);\n  //         resultado1 = results[0]['count(idusuario)']\n  //         console.log(resultado1);\n  //       }\n  //     );\n  //     connection.query(\n  //       'select usuarios.nome as \"Nome\", count(mensagens.idusuario) from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario',\n  //       function(err, results) {\n  //         results.forEach(i=>{\n  //           resultado2.push(i);\n  //           console.log(i);\n  //         }\n            \n  //         )\n  //       }\n  //     )\n\n  //     connection.query(\n  //       'select avg(resultado.msg) from (select usuarios.nome as \"Nome\", count(mensagens.idusuario) as msg from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario) as resultado',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       \"select intencoes.nome as intencao, count(mensagens.idusuario) as msg from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idintencao\",\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select resultado.intencao, count(resultado.msg) as \"msg\", resultado.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as resultado where resultado.intencao = \"Aplicar\" group by resultado.intencao,resultado.status',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select B.intencao, sum(B.msg) as total, sum(case when B.status = \"Aprovada\" then B.msg end) as \"aprovacao\", sum(case when B.status = \"Aprovada\" then B.msg end)/sum(B.msg) as \"percentual\" from (select A.intencao, count(A.msg) as \"msg\", A.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as A group by A.intencao,A.status) as B group by B.intencao order by percentual desc',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select A.status, A.msg, A.msg/(select count(*) from mensagens)*100 as percentual from(select status.status, count(mensagens.idstatus) as \"msg\", (select count(*) from mensagens) as total from mensagens join status on mensagens.idstatus = status.idstatus group by mensagens.idstatus) as A',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select A.nome, A.Mensagens, A.Mensagens/(select count(*) from mensagens)*100 as percentual from(select intencoes.nome,count(mensagens.idintencao) as \"Mensagens\" from mensagens join intencoes on mensagens.idintencao = intencoes.idintencao group by mensagens.idintencao) as A',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select count(usuarios.idusuario) from mensagens right join usuarios on mensagens.idusuario = usuarios.idusuario where mensagens.idmensagem is null',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n\n\n  //     //console.log(consulta1);\n\n  //     // http.createServer(function (req, res) {\n  //     //   resultado2.forEach(i=>{\n  //     //     res.writeHead(200, {'Content-Type': 'text/html'});\n  //     //     res.write('<p>'+i.Nome+'</p><br>')\n  //     //   })\n  //     //   //res.write(\"\"+resultado2.toString()); //write a response to the client\n  //     //   res.end(); //end the response\n  //     // }).listen(8080);\n\n  // },\n\n  mounted() {\n    this.main();\n    this.charts();\n  },\n}\n}\n</script>\n<style>\n.home {\n  color: red;\n}\n</style>"],"sourceRoot":"src/views"}]}