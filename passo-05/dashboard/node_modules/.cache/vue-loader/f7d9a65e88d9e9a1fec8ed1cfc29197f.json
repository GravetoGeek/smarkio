{"remainingRequest":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\src\\views\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\src\\views\\Home.vue","mtime":1605701326796},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vagas\\teste-smarkio\\passo-05\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaG9tZSB7CiAgY29sb3I6IHJlZDsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8PA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <h4>Teste anychart</h4>\n    <div id=\"grafico\"></div>\n    {{ mensagens }}\n    <!-- {{ mensagens }} -->\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n//import axios from 'axios';\n//import moment from 'moment';\nimport anychart from \"anychart\";\n//import mysql from \"mysql2/promise\";\n//import graficolinha from '../components/graficolinha';\n//const mysql = require(\"mysql2/promise\");\n//const mysql = require(\"mysql2\");\n\nconst mysql = require('mysql');\n      //var http = require('http');\n      var resultado1 = null;\n      var resultado2 = [];\n      // create the connection to database\n      const connection = mysql.createConnection({\n        host: 'localhost',\n        user: 'smarkio',\n        password:'12345',\n        database: 'smarkiodb'\n      });\n\n      connection.query(\n        'select count(idusuario) from usuarios\twhere month(data) = 7 and year(data) = 2020',\n        function(err, results) {\n          console.log(typeof results[0]['count(idusuario)']);\n          resultado1 = results[0]['count(idusuario)']\n          console.log(resultado1);\n        }\n      );\n      connection.query(\n        'select usuarios.nome as \"Nome\", count(mensagens.idusuario) from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario',\n        function(err, results) {\n          results.forEach(i=>{\n            resultado2.push(i);\n            console.log(i);\n          }\n            \n          )\n        }\n      )\n\n      connection.query(\n        'select avg(resultado.msg) from (select usuarios.nome as \"Nome\", count(mensagens.idusuario) as msg from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario) as resultado',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        \"select intencoes.nome as intencao, count(mensagens.idusuario) as msg from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idintencao\",\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select resultado.intencao, count(resultado.msg) as \"msg\", resultado.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as resultado where resultado.intencao = \"Aplicar\" group by resultado.intencao,resultado.status',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select B.intencao, sum(B.msg) as total, sum(case when B.status = \"Aprovada\" then B.msg end) as \"aprovacao\", sum(case when B.status = \"Aprovada\" then B.msg end)/sum(B.msg) as \"percentual\" from (select A.intencao, count(A.msg) as \"msg\", A.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as A group by A.intencao,A.status) as B group by B.intencao order by percentual desc',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select A.status, A.msg, A.msg/(select count(*) from mensagens)*100 as percentual from(select status.status, count(mensagens.idstatus) as \"msg\", (select count(*) from mensagens) as total from mensagens join status on mensagens.idstatus = status.idstatus group by mensagens.idstatus) as A',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select A.nome, A.Mensagens, A.Mensagens/(select count(*) from mensagens)*100 as percentual from(select intencoes.nome,count(mensagens.idintencao) as \"Mensagens\" from mensagens join intencoes on mensagens.idintencao = intencoes.idintencao group by mensagens.idintencao) as A',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n      connection.query(\n        'select count(usuarios.idusuario) from mensagens right join usuarios on mensagens.idusuario = usuarios.idusuario where mensagens.idmensagem is null',\n        function(err,results){\n          results.forEach(i=>{\n            console.log(i);\n          })\n        }\n      )\n\nexport default {\n  name: \"Home\",\n  components: {\n    //graficolinha\n  },\n  data() {\n    return {\n      usuarios: [],\n      intencoes: [],\n      status: [],\n      mensagens: [],\n      rows1: [],\n      fields1: [],\n      dados: [\n        { x: \"A\", value: 637166 },\n        { x: \"B\", value: 721630 },\n        { x: \"C\", value: 148662 },\n        { x: \"D\", value: 78662 },\n        { x: \"E\", value: 90000 },\n      ],\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    };\n  },\n\n  methods: {\n    async charts() {\n      var chart = anychart.pie(this.dados);\n      chart.container(\"grafico\");\n      chart.draw();\n    },\n\n  //   async main() {\n  //     const mysql = require('mysql2');\n  //     //var http = require('http');\n  //     var resultado1 = null;\n  //     //var resultado2 = [];\n  //     // create the connection to database\n  //     const connection = mysql.createConnection({\n  //       host: 'localhost',\n  //       user: 'smarkio',\n  //       password:'12345',\n  //       database: 'smarkiodb'\n  //     });\n\n  //     connection.query(\n  //       'select count(idusuario) from usuarios\twhere month(data) = 7 and year(data) = 2020',\n  //       function(err, results) {\n  //         console.log(typeof results[0]['count(idusuario)']);\n  //         resultado1 = results[0]['count(idusuario)']\n  //         console.log(resultado1);\n  //       }\n  //     );\n  //     connection.query(\n  //       'select usuarios.nome as \"Nome\", count(mensagens.idusuario) from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario',\n  //       function(err, results) {\n  //         results.forEach(i=>{\n  //           resultado2.push(i);\n  //           console.log(i);\n  //         }\n            \n  //         )\n  //       }\n  //     )\n\n  //     connection.query(\n  //       'select avg(resultado.msg) from (select usuarios.nome as \"Nome\", count(mensagens.idusuario) as msg from mensagens inner join usuarios on mensagens.idusuario = usuarios.idusuario where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idusuario) as resultado',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       \"select intencoes.nome as intencao, count(mensagens.idusuario) as msg from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao where month(mensagens.data) = 7 and year(mensagens.data) = 2020 group by mensagens.idintencao\",\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select resultado.intencao, count(resultado.msg) as \"msg\", resultado.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as resultado where resultado.intencao = \"Aplicar\" group by resultado.intencao,resultado.status',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select B.intencao, sum(B.msg) as total, sum(case when B.status = \"Aprovada\" then B.msg end) as \"aprovacao\", sum(case when B.status = \"Aprovada\" then B.msg end)/sum(B.msg) as \"percentual\" from (select A.intencao, count(A.msg) as \"msg\", A.status from(select intencoes.nome as intencao, mensagens.idmensagem as msg, status.status as status from mensagens inner join intencoes on mensagens.idintencao = intencoes.idintencao inner join status on mensagens.idstatus = status.idstatus where month(mensagens.data) = 7 and year(mensagens.data) = 2020) as A group by A.intencao,A.status) as B group by B.intencao order by percentual desc',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select A.status, A.msg, A.msg/(select count(*) from mensagens)*100 as percentual from(select status.status, count(mensagens.idstatus) as \"msg\", (select count(*) from mensagens) as total from mensagens join status on mensagens.idstatus = status.idstatus group by mensagens.idstatus) as A',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select A.nome, A.Mensagens, A.Mensagens/(select count(*) from mensagens)*100 as percentual from(select intencoes.nome,count(mensagens.idintencao) as \"Mensagens\" from mensagens join intencoes on mensagens.idintencao = intencoes.idintencao group by mensagens.idintencao) as A',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n  //     connection.query(\n  //       'select count(usuarios.idusuario) from mensagens right join usuarios on mensagens.idusuario = usuarios.idusuario where mensagens.idmensagem is null',\n  //       function(err,results){\n  //         results.forEach(i=>{\n  //           console.log(i);\n  //         })\n  //       }\n  //     )\n\n\n  //     //console.log(consulta1);\n\n  //     // http.createServer(function (req, res) {\n  //     //   resultado2.forEach(i=>{\n  //     //     res.writeHead(200, {'Content-Type': 'text/html'});\n  //     //     res.write('<p>'+i.Nome+'</p><br>')\n  //     //   })\n  //     //   //res.write(\"\"+resultado2.toString()); //write a response to the client\n  //     //   res.end(); //end the response\n  //     // }).listen(8080);\n\n  // },\n\n  mounted() {\n    this.main();\n    this.charts();\n  },\n}\n}\n</script>\n<style>\n.home {\n  color: red;\n}\n</style>"]}]}